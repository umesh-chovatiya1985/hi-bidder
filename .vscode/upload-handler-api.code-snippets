{
	"Create api for file upload": {
		"scope": "javascript,typescript",
		"prefix": "uploadapi",
		"body": [
			"import { NextApiHandler, NextApiRequest, NextApiResponse } from \"next\";",
			"import path from \"path\";",
			"import fs from \"fs/promises\";",
			"",
			"",
			"export const config = {",
			"   api: {",
			"      bodyParser: false,",
			"   },",
			"}",
			"",
			"const handler: NextApiHandler = async (req: NextApiRequest, res: NextApiResponse) => {",
			"   try {",
			"       await fs.readdir(path.join(process.cwd() + \"/public\", \"/images\", \"/${1:dirName}\"));",
			"   } catch (error) {",
			"       await fs.mkdir(path.join(process.cwd() + \"/public\", \"/images\", \"/${1:dirName}\"));",
			"   } ",
			"",
			"   try {",
			"         const catcher = (error: Error) => res.status(400).json({ error });",
			"         const response = await uploadFile(req, true, \"/${1:dirName}\");",
			"         let apiResponse = { status: 0, message: \"No action done with api.\" };",
			"         if(response.fields){",
			"             const fieldData = JSON.parse(response.fields.data.toString());",
			"             const { ${3:exportModel} } = await ${2:modelSchema}();",
			"             if(fieldData._id && fieldData._id!=''){",
			"                const editData = await ${3:exportModel}.findById(fieldData._id);",
			"                if(editData){",
			"                   const primaryId = fieldData._id;",
			"                   delete fieldData._id;",
			"                   const resp = await ${3:exportModel}.findByIdAndUpdate(primaryId, fieldData, { new: true }).catch(catcher);",
			"                   apiResponse = { status: 1, message: \"${4:serviceName} updated successfully.\" };",
			"                   return res.status(200).json(apiResponse);",
			"                }",
			"             }",
			"         let ${4:modelName} = new ${3:exportModel}(fieldData);",
			"         const saveRespo = await ${4:modelName}.save().catch(catcher);",
			"         apiResponse = { status: 1, message: \"${4:serviceName} created successfully.\" };",
			"         return res.status(200).json(apiResponse);",
			"   }",
			"   catch(error) {",
			"         res.status(400).json({ error });",
			"   }",
			"}",
			"export default handler"
		],
		"description": "Create Api for upload file"
	}
}